
((digest . "4c82aecdfce5946080de1d0ab1d37671") (undo-list nil (2278 . 2331) (#("// 	    if( typeid(*edge[k]) == typeid(Circle) ){" 0 49 (c-in-sws t)) . 2278) (2349 . 2396) ("// 	      //moveNewCirclePoint(edge[k],np);" . 2349) (10253 . 10300) ("  Circle *c = dynamic_cast<Circle*>(e);" . 10253) (10541 . 10580) ("  if(typeid(*e) == typeid(Circle)){" . 10541) (10577 . 10626) ("    Circle *c = dynamic_cast<Circle*>(e);" . 10577) (10801 . 10886) ("    Circle *c1 = new Circle(new_node,c->p[1],c->center.x,c->center.y,theta1);" . 10801) (10879 . 10964) ("    Circle *c2 = new Circle(c->p[0],new_node,c->center.x,c->center.y,theta2);" . 10879) (11496 . 11542) (#("// 関数名：canExistOnCircleEdge() --- class DT" 0 42 (c-in-sws t)) . 11496) (11611 . 11647) ("// 戻り値：CirclecleのEdgeで点が存在できるか否か" . 11611) (11858 . 11905) ("  Circle *c = dynamic_cast<Circle*>(e);" . 11858) (12838 . 12883) ("	if( typeid(*edge[j]) == typeid(Circle) )" . 12838) (14049 . 14099) ("     if( typeid(*edge[i]) == typeid(Circle) ){" . 14049) (14096 . 14153) ("      Circle *c = dynamic_cast<Circle*>(edge[i]);" . 14096) (t . 1394627901) nil (196 . 247) (#("bool isCrossed( Straight e1, Straight e2 );" 0 43 (fontified nil)) . 196) (2013 . 2029) (#("	Straight e;" 0 12 (fontified nil)) . 2013) (3491 . 3540) (#("	Straight e(tri[i]->p[j],tri[i]->p[(j+1)%3]);" 0 45 (fontified nil)) . 3491) (4772 . 4794) (#("      Straight e1;" 0 18 (fontified nil)) . 4772) (5327 . 5349) (#("      Straight e2;" 0 18 (fontified nil)) . 5327) (6200 . 6236) (#("	// 	  Straight e0(e1.p[0],cnp);" 0 32 (fontified nil)) . 6200) (11082 . 11135) (#("    Straight *c = dynamic_cast<Straight*>(e);" 0 45 (fontified nil)) . 11082) (11128 . 11186) (#("    Straight *c1 = new Straight(new_node,c->p[1]);" 0 50 (fontified nil)) . 11128) (11179 . 11237) (#("    Straight *c2 = new Straight(c->p[0],new_node);" 0 50 (fontified nil)) . 11179) (12658 . 12677) (#("    Straight e;" 0 15 (fontified nil)) . 12658) (13536 . 13587) (#("    if( typeid(*edge[i]) == typeid(Straight) ){" 0 47 (fontified nil)) . 13536) (13584 . 13645) (#("      Straight *s = dynamic_cast<Straight*>(edge[i]);" 0 53 (fontified nil)) . 13584) (15191 . 15226) (#("Straight Tri::getLongestEdge(){" 0 1 (fontified nil c-is-sws t) 1 31 (fontified nil)) . 15191) (15223 . 15243) (#("  Straight e[3];" 0 16 (fontified nil)) . 15223) (15732 . 15766) (#("Straight Tri::getMiddleEdge(){" 0 1 (fontified nil c-is-sws t) 1 30 (fontified nil)) . 15732) (15763 . 15783) (#("  Straight e[3];" 0 16 (fontified nil)) . 15763) (15958 . 15986) (#("  Straight etemp = e[0];" 0 24 (fontified nil)) . 15958) (16401 . 16437) (#("Straight Tri::getShortestEdge(){" 0 32 (fontified nil)) . 16401) (16434 . 16454) (#("  Straight e[3];" 0 16 (fontified nil)) . 16434) 1 (t . 1394457544) nil (#("e" 0 1 (fontified t)) . 12845) nil (#("l" 0 1 (fontified t)) . 12845) nil (#("c" 0 1 (fontified t)) . 12845) (t . 1394457527) nil (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 11769) nil (#("l" 0 1 (face font-lock-function-name-face fontified t)) . 11769) nil (#("c" 0 1 (face font-lock-function-name-face fontified t)) . 11769) nil (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 10191) nil (#("l" 0 1 (face font-lock-function-name-face fontified t)) . 10191) nil (#("c" 0 1 (face font-lock-function-name-face fontified t)) . 10191) (t . 1394457410) nil (2266 . 2315) (#("// 	    if( typeid(*edge[k]) == typeid(Cir) ){" 0 46 (c-in-sws t)) . 2266) (2334 . 2377) ("// 	      //moveNewCirPoint(edge[k],np);" . 2334) (10166 . 10219) ("void DT::moveNewCirPoint(Edge* &e, Node *new_node)" . 10166) (10219 . 10258) ("  Cir *c = dynamic_cast<Cir*>(e);" . 10219) (10501 . 10536) ("  if(typeid(*e) == typeid(Cir)){" . 10501) (10534 . 10575) ("    Cir *c = dynamic_cast<Cir*>(e);" . 10534) (10752 . 10829) ("    Cir *c1 = new Cir(new_node,c->p[1],c->center.x,c->center.y,theta1);" . 10752) (10824 . 10901) ("    Cir *c2 = new Cir(c->p[0],new_node,c->center.x,c->center.y,theta2);" . 10824) (11411 . 11453) (#("// 関数名：canExistOnCirEdge() --- class DT" 0 39 (c-in-sws t)) . 11411) (11523 . 11555) (#("// 戻り値：CircleのEdgeで点が存在できるか否か" 0 29 (c-in-sws t)) . 11523) (11708 . 11767) ("bool DT::canExistOnCirEdge(Edge* &e,Node *np,Node *triP)" . 11708) (11767 . 11806) ("  Cir *c = dynamic_cast<Cir*>(e);" . 11767) (12737 . 12778) ("	if( typeid(*edge[j]) == typeid(Cir) )" . 12737) (12776 . 12854) ("	  if( !canExistOnCirEdge( edge[j], np, pTri->p[(i+2)%3] ) ) return false; " . 12776) (13933 . 13979) ("     if( typeid(*edge[i]) == typeid(Cir) ){" . 13933) (13977 . 14026) ("      Cir *c = dynamic_cast<Cir*>(edge[i]);" . 13977) (t . 1394456207) nil (#("Str" 0 3 (fontified nil)) . -16379) (16382 . 16390) (#("Str" 0 3 (fontified nil)) . -16344) (16347 . 16355) (#("Str" 0 3 (fontified nil)) . -15903) (15906 . 15914) (#("Str" 0 3 (fontified nil)) . -15708) (15711 . 15719) (#("Str" 0 3 (fontified nil)) . -15675) (15678 . 15686) (#("Str" 0 3 (fontified nil)) . -15168) (15171 . 15179) (#("Str" 0 3 (fontified nil)) . -15134) (15137 . 15145) (#("Str" 0 3 (fontified nil)) . -13569) (13572 . 13580) (#("Str" 0 3 (fontified nil)) . -13542) (13545 . 13553) (#("Str" 0 3 (fontified nil)) . -13523) (13526 . 13534) (#("Str" 0 3 (fontified nil)) . -12617) (12620 . 12628) (#("Str" 0 3 (fontified nil)) . -11169) (11172 . 11180) (#("Str" 0 3 (fontified nil)) . -11150) (11153 . 11161) (#("Str" 0 3 (fontified nil)) . -11118) (11121 . 11129) (#("Str" 0 3 (fontified nil)) . -11099) (11102 . 11110) (#("Str" 0 3 (fontified nil)) . -11080) (11083 . 11091) (#("Str" 0 3 (fontified nil)) . -11053) (11056 . 11064) (#("Str" 0 3 (fontified nil)) . -6201) (6204 . 6212) (#("Str" 0 3 (fontified nil)) . -5327) (5330 . 5338) (#("Str" 0 3 (fontified nil)) . -4772) (4775 . 4783) (#("Str" 0 3 (fontified nil)) . -3486) (3489 . 3497) (#("Str" 0 3 (fontified nil)) . -2014) (2017 . 2025) (nil fontified nil 230 . 233) (nil face font-lock-type-face 230 . 233) (#("Str" 0 3 (face font-lock-type-face fontified nil)) . -225) (228 . 236) (nil fontified t 217 . 220) (t . 1350966598) (nil face font-lock-type-face 217 . 220) (t . 1350966598) (#("Str" 0 3 (face font-lock-type-face fontified t)) . -212) (t . 1350966598) (215 . 223) 212 (t . 1350966598)))
